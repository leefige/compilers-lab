<Module> selftest/foo-opt.ll, size is 5
---------
<Func> foo__: arg %0 arg %1
Checking with assertions:
(ast-vector
  (let ((a!1 (= %20 (bvnot (bvor (bvnot %1) (bvnot %0)))))
        (a!2 (not (and (bvsle #x0000000000000000 %11)
                       (not (bvsle #x0000000000000080 %11))))))
    (and (= %4 (ite (bvsle %0 #x00000000) #b0 #b1))
         (= %5 %4)
         (= %19 (ite (= %4 #b1) #b0 #b1))
         a!1
         (= %21 #b1)
         (= %6 #x00000000)
         (= %7 (bvadd %6 %0))
         (= %8 (concat ((_ extract 30 0) %7) #b0))
         (= %9 (ite (bvsle #x00000040 %8) #b0 #b1))
         (= %10 %9)
         (= %16 (ite (= %9 #b1) #b0 #b1))
         (= %17 (bvor %8 %0))
         (= %18 #b1)
         (= %11
            (concat ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    ((_ extract 31 31) %8)
                    %8))
         a!2)))
GEP %12 is potentially out of bound.
Model causing out of bound:
(define-fun %17 () (_ BitVec 32)
  #xc0000000)
(define-fun %9 () (_ BitVec 1)
  #b1)
(define-fun %16 () (_ BitVec 1)
  #b0)
(define-fun %21 () (_ BitVec 1)
  #b1)
(define-fun %4 () (_ BitVec 1)
  #b1)
(define-fun %5 () (_ BitVec 1)
  #b1)
(define-fun %7 () (_ BitVec 32)
  #x40000000)
(define-fun %8 () (_ BitVec 32)
  #x80000000)
(define-fun %10 () (_ BitVec 1)
  #b1)
(define-fun %18 () (_ BitVec 1)
  #b1)
(define-fun %6 () (_ BitVec 32)
  #x00000000)
(define-fun %1 () (_ BitVec 32)
  #x40000000)
(define-fun %19 () (_ BitVec 1)
  #b0)
(define-fun %0 () (_ BitVec 32)
  #x40000000)
(define-fun %20 () (_ BitVec 32)
  #x40000000)
(define-fun %11 () (_ BitVec 64)
  #xffffffff80000000)
---------
<Func> foo: arg %0
---------
<Func> foo1: arg %0
Checking with assertions:
(ast-vector
  (let ((a!1 (not (and (bvsle #x0000000000000000 %4)
                       (not (bvsle #x0000000000000040 %4))))))
    (and (= %4
            (concat ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    ((_ extract 31 31) %0)
                    %0))
         a!1)))
GEP %5 is potentially out of bound.
Model causing out of bound:
(define-fun %4 () (_ BitVec 64)
  #xffffffff80000000)
(define-fun %0 () (_ BitVec 32)
  #x80000000)
Checking with assertions:
(ast-vector
  (let ((a!1 (concat ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     ((_ extract 31 31) %0)
                     %0))
        (a!2 (not (and (bvsle #x0000000000000000 %8)
                       (not (bvsle #x0000000000000040 %8))))))
    (and (= %4 a!1) (= %7 (bvadd %6 %3)) (= %8 a!1) a!2)))
GEP %9 is potentially out of bound.
Model causing out of bound:
(define-fun %4 () (_ BitVec 64)
  #xffffffff80000000)
(define-fun %0 () (_ BitVec 32)
  #x80000000)
(define-fun %7 () (_ BitVec 32)
  #x00000000)
(define-fun %6 () (_ BitVec 32)
  #x00000000)
(define-fun %3 () (_ BitVec 32)
  #x00000000)
(define-fun %8 () (_ BitVec 64)
  #xffffffff80000000)
---------
<Func> bar: arg %0
---------
<Func> foobar:
